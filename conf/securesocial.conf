securesocial {
    #
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    #
    onLoginGoTo=/

    #
    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    #
    onLogoutGoTo=/login

    #
    # Enable SSL 
    #
    ssl=false   
	
	
    #
    # The controller class for assets. This is optional, only required
    # when you use a custom class for Assets.
    #
    assetsController=controllers.ReverseMyCustomAssetsController

     cookie {
            #name=id
            #path=/
            #domain=some_domain
            #httpOnly=true
            #idleTimeoutInMinutes=30
            #absoluteTimeOutInMinutes=720
    }


}

userpass {      
    withUserNameSupport=false
    sendWelcomeEmail=true
    enableGravatarSupport=true
    signupSkipLogin=true
    tokenDuration=60
    tokenDeleteInterval=5
    minimumPasswordLength=8
    enableTokenJob=true
    hasher=bcrypt
}



twitter {
    requestTokenUrl="https://twitter.com/oauth/request_token"
    accessTokenUrl="https://twitter.com/oauth/access_token"
    authorizationUrl="https://twitter.com/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
}

facebook {
    authorizationUrl="https://graph.facebook.com/oauth/authorize"
    accessTokenUrl="https://graph.facebook.com/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
    # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
    scope=email
}

google {
    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    clientId=your_client_id
    clientSecret=your_client_secret
    scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
}

linkedin {
    requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
    accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
    authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
}

github {
    authorizationUrl="https://github.com/login/oauth/authorize"
    accessTokenUrl="https://github.com/login/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
}

foursquare {
    authorizationUrl="https://foursquare.com/oauth2/authenticate"
    accessTokenUrl="https://foursquare.com/oauth2/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
}

xing {
    requestTokenUrl="https://api.xing.com/v1/request_token"
    accessTokenUrl="https://api.xing.com/v1/access_token"
    authorizationUrl="https://api.xing.com/v1/authorize"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
}

instagram {
    authorizationUrl="https://api.instagram.com/oauth/authorize"
    accessTokenUrl="https://api.instagram.com/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
}

vk {
    authorizationUrl="http://oauth.vk.com/authorize"
    accessTokenUrl="https://oauth.vk.com/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
}